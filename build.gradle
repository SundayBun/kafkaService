plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id "com.palantir.docker" version "0.30.0"
}

group = 'com.example'
version = '0.0.1'
sourceCompatibility = '14'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.data:spring-data-r2dbc'
    implementation 'org.postgresql:r2dbc-postgresql'
    implementation 'org.postgresql:postgresql'

//    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.projectreactor:reactor-core'
    // https://mvnrepository.com/artifact/io.projectreactor.kafka/reactor-kafka
    implementation 'io.projectreactor.kafka:reactor-kafka'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'


    implementation 'org.projectlombok:lombok'
    testImplementation 'junit:junit:4.13.1'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    name "kafka-service:${project.version}"
    files "${project.name}-${project.version}.jar"
}
